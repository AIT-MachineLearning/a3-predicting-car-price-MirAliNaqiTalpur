name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checkout the code
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Set up Docker
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     # Build the Docker image for testing
  #     - name: Build Docker image for testing
  #       run: docker build -t carpredictionasgthree -f .Dockerfile .

  #     # Run tests inside the Docker container
  #     - name: Run tests in Docker
  #       run: docker run carpredictionasgthree pytest

  build:
    runs-on: ubuntu-latest
    # needs: test  # Build only after tests pass    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Build the Docker image for the app
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ml_125001_final:latest -f Dockerfile .
      # Push the image to DockerHub
      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/ml_125001_final:latest
  # Deployment job
  deploy:    
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.MLBRAIN_HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.MLBRAIN_SSH_PRIVATE }}
          passphrase: ${{ secrets.PASSPHRASE }}
          proxy_host: ${{ secrets.BAZOOKA_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_password: ${{ secrets.PASSWORD }}
          proxy_key: ${{ secrets.MLBRAIN_SSH_PRIVATE }} 
          proxy_passphrase: ${{ secrets.PASSPHRASE  }}                   
          script: |
            docker pull mirali818/ml_125001_final:latest
            docker compose -f st125001/docker-compose.yaml down --remove-orphans
            docker compose -f st125001/docker-compose.yaml down --remove-orphans 
            docker compose -f st125001/docker-compose.yaml up -d